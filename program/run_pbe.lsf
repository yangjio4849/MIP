#!/bin/bash
#BSUB -q cpu 
#BSUB -o out%J.txt
#BSUB -e error%J.txt
#BSUB -J vasp.job
#BSUB -n 24
#BSUB -R "span[ptile=24]"
####BSUB -m cpu02

source /share/apps/intel/ipsxe2015u5/parallel_studio_xe_2015/psxevars.sh >/dev/null 2>&1
######You need perl bc
######user_tip for interface between the .lsf and website
####################################the part above is decided by the cluster which you use
####################################the part below is the pbe calculation, and please find some detail informations about the calculation in the PPT
####################################there are two or two default input file, PPOSCAR (primitive cell) and soc.txt (touch a soc.txt file if you want to do a soc calculation)
####################################some necessary holdability document must be put in your bin directory. (GETPOTCARPAW, PAW, GETINCAR, LDAU, lattice_parameter, getgap, vasp.5.4.4, chgsum.pl, bader, dospar, phonopy, GETBANDK.sh, bandstru, getfulleig, transoptic_e, derivation, efdetermin, EPHC, preEPHC, GETSpaceGroupTypeNumber.py)

mkdir $dir
cd $dir
cp ../PPOSCAR ../soc.txt .
##############system
cp PPOSCAR POSCAR
GETPOTCARPAW

SOC=`find soc.txt`
soc=`expr length "$SOC"`
if (($soc < 1)); then
#### test_spin part####
  rm -rf test_spin/
  mkdir test_spin
  cp PPOSCAR test_spin/POSCAR
  cp POTCAR test_spin/
  cp ../INCAR.test.pbe test_spin/INCAR
  cd test_spin/

    for ((i=1;i<=6;i++))
    do
    start[$i]=`lattice_parameters | awk -v j=$i '{print $j}'`
    done


#KPOINTS 30/L
  for ((i=1;i<=3;i++))
  do
  mesh[$i]=`echo "30 / ${start[$i]} + 1.0" | bc -l | awk -F "." '{print $1}'`
  done
  echo "KPOINTS" >KPOINTS
  echo "0" >>KPOINTS
  echo "G">> KPOINTS
  echo ${mesh[*]} >> KPOINTS
  echo "0 0 0" >>KPOINTS


  T[0]=`date`
  #####################################################
  #################modify to accomodate user's cluster system
    mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym > result
  ################################
  ################################
  T[1]=`date`
  b=`grep "aborting loop because EDIFF is reached" OUTCAR`
  testspin=`expr length "$b"`
    if ((${testspin} > 0));then
    echo ${T[*]}>converged.txt
       #######test_spin
 
       mag=`grep "  1 F" result | awk '{print $10}'`

       #####if calculate spin
 
       if ((`echo "$mag^2 < 0.0004" | bc`))
         then
           echo "false" >no_spin_polarization.txt
         else
           echo "true" > spin_polarization.txt
       fi

    else 
    echo ${T[*]} > noconverged.txt
    fi

  spin=`ls | grep no_spin_polarization.txt`
  lenth=`expr length "$spin"`
  cd ../
fi

Conver=`find test_spin/ -name converged.txt`
yes=`expr length "$Conver"`
  if (($yes > 0 || $soc > 0)); then
  rm -rf Relax/
  mkdir Relax
  cd Relax
  cp ../PPOSCAR POSCAR
  cp ../POTCAR . 
  cp ../../INCAR.relax.coarse.pbe ../../INCAR.relax.fine.pbe .

  T[0]=`date`

  #get initial a,b,c,alpha,beta,gamma
    for ((i=1;i<=6;i++))
    do
    start[$i]=`lattice_parameters | awk -v j=$i '{print $j}'`
    done

  #KPOINTS 30/L
    for ((k=1;k<=3;k++))
    do
    mesh[$k]=`echo "30 / ${start[$k]} + 1.0" | bc -l | awk -F "." '{print $1}'`
    done
  echo "KPOINTS" >KPOINTS
  echo "0" >>KPOINTS
  echo "G">> KPOINTS
  echo ${mesh[*]} >> KPOINTS
  echo "0 0 0" >>KPOINTS
  a=`grep "reached required accuracy - stopping structural energy minimisation" OUTCAR`
  relax=`expr length "$a"`
    if (($soc < 1));then
      if (($lenth > 0))
      then
      cp INCAR.relax.coarse.pbe INCAR
      else
      cp INCAR.relax.coarse.pbe INCAR
      echo "ISPIN=2" >> INCAR
      fi
    else
      cp INCAR.relax.coarse.pbe INCAR
    fi
  GETINCAR

  #start calculation with ISIF=3 & IBRION=2
  i=1
    while (($i < 6 & ${relax} < 1))
    do

    #####################################################
    #################modify to accomodate user's cluster system
      mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym > result
    ################################
    ################################
    cp CONTCAR POSCAR
    a=`grep "reached required accuracy - stopping structural energy minimisation" OUTCAR`
    relax=`expr length "$a"`
    i=$(($i + 1))
    done

  # convergence test
    if (("${relax}" > 0));then         #converged
    T[1]=`date`
      for ((i=1;i<=6;i++))
      do
      end[$i]=`lattice_parameters | awk -v j=$i '{print $j}'`
      #compare with 0.05
      result[$i]=`echo "scale=8;sqrt((1 - ${end[$i]} / ${start[$i]}) * (1 - ${end[$i]} / ${start[$i]}))" | bc -l`
      compare[$i]=`echo "${result[$i]} > 0.05" | bc -l`
      done


    #Less than 0.05 converged perfectly
      if ((${compare[1]} < 1 & ${compare[2]} < 1 & ${compare[3]} < 1 & ${compare[4]} < 1 & ${compare[5]} < 1 & ${compare[6]} < 1))
      then
      echo $a>relaxed.txt
      echo ${T[*]}>>relaxed.txt
      echo ${start[*]} >>relaxed.txt
      echo ${end[*]} >> relaxed.txt
      echo ${result[*]} >> relaxed.txt
    #larger than 0.05
      else
      echo $a>relaxed.deformed.txt
      echo ${T[*]}>>relaxed.deformed.txt
      echo ${start[*]} >>relaxed.deformed.txt
      echo ${end[*]} >> relaxed.deformed.txt
      echo ${result[*]} >> relaxed.deformed.txt
      fi

    #if not converged with INCAR.relax.coarse.pbe (IBRRION=2, ISIF=3), then start with INCAR.relax.fine.pbe (IBRION=1, ISIF=0)
    else
      if (($soc < 1));then
        if (($lenth > 0))
        then
        cp INCAR.relax.fine.pbe INCAR
        else
        cp INCAR.relax.fine.pbe INCAR
        echo "ISPIN=2" >> INCAR
        fi
      else
        cp INCAR.relax.fine.pbe INCAR
      fi
    GETINCAR
    j=1
      while (($j < 6 & ${relax} < 1))
      do
      #####################################################
      #################modify to accomodate user's cluster system
        mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym > result
      ################################
      ################################
      cp CONTCAR POSCAR
      a=`grep "reached required accuracy - stopping structural energy minimisation" OUTCAR`
      relax=`expr length "$a"`
      j=$(($j + 1))
      done

    # calculation complete,start converangece test

    T[1]=`date`
      if (("${relax}" > 0));then
        for ((i=1;i<=6;i++))
        do
        end[$i]=`lattice_parameters | awk -v j=$i '{print $j}'`
        #compare with 0.05
        result[$i]=`echo "scale=8;sqrt((1 - ${end[$i]} / ${start[$i]}) * (1 - ${end[$i]} / ${start[$i]}))" | bc -l`
        compare[$i]=`echo "${result[$i]} > 0.05" | bc -l`
        done


        if ((${compare[1]} < 1 & ${compare[2]} < 1 & ${compare[3]} < 1 & ${compare[4]} < 1 & ${compare[5]} < 1 & ${compare[6]} < 1))
        then
        echo $a>relaxed.txt
        echo ${T[*]}>>relaxed.txt
        echo ${start[*]} >>relaxed.txt
        echo ${end[*]} >> relaxed.txt
        echo ${result[*]} >> relaxed.txt
        else
        echo $a>relaxed.deformed.txt
        echo ${T[*]}>>relaxed.deformed.txt
        echo ${start[*]} >>relaxed.deformed.txt
        echo ${end[*]} >> relaxed.deformed.txt
        echo ${result[*]} >> relaxed.deformed.txt
        fi
      else
      echo "norelaxed" > nonrelaxed.txt
      echo ${T[*]} >> nonrelaxed.txt
      fi
    fi
  fi
cd ../
#### Static part####

RELAX=`find Relax/ -name relaxed*`
relax=`expr length "$RELAX"`
  if (($relax > 0)); then
  rm -rf SCF/
  mkdir SCF
  cp Relax/PO?CAR SCF/
  nele=`grep NELEC Relax/OUTCAR | awk '{print $3}'`

# number of empty bands is half the valence bands
    if (($soc < 1));then
      if (($lenth > 0))
      then
      cp ../INCAR.SCF.pbe SCF/INCAR
      NBANDS=`echo "$nele * 1.5" | bc -l | awk -F "." '{print $1}'`
      echo "NBANDS=" $NBANDS >> SCF/INCAR
      else
      cp ../INCAR.SCF.pbe SCF/INCAR
      echo "ISPIN=2" >> SCF/INCAR
      NBANDS=`echo "$nele * 1.5" | bc -l | awk -F "." '{print $1}'`
      echo "NBANDS=" $NBANDS >> SCF/INCAR
      fi
    else
    cp ../INCAR.SCF.pbe SCF/INCAR
    echo "GGA_COMPAT=.FALSE.">>SCF/INCAR
    echo "SAXIX=0 0 1" >> SCF/INCAR
    echo "ISPIN=2" >> SCF/INCAR
    echo "LNONCOLLINEAR=.True. " >>SCF/INCAR
    echo "LORBMOM = .TRUE." >> SCF/INCAR
    echo "LSORBIT = .TRUE." >> SCF/INCAR
    NBANDS=`echo "$nele * 2.5" | bc -l | awk -F "." '{print $1}'`
    echo "NBANDS=" $NBANDS >> SCF/INCAR
    fi

  mv Relax/CHGCAR SCF/
  cd SCF/
  GETINCAR

    for ((i=1;i<=6;i++))
    do
    start[$i]=`lattice_parameters | awk -v j=$i '{print $j}'`
    done


  #KPOINTS 60/L
    for ((i=1;i<=3;i++))
    do
    mesh[$i]=`echo "60 / ${start[$i]} + 1.0" | bc -l | awk -F "." '{print $1}'`
    done
  echo "KPOINTS" >KPOINTS
  echo "0" >>KPOINTS
  echo "G">> KPOINTS
  echo ${mesh[*]} >> KPOINTS
  echo "0 0 0" >>KPOINTS

  T[0]=`date`

  #####################################################
  #################modify to accomodate user's cluster system
    if (($soc < 1))
    then
    mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym > result
    else
    mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym.so > result
    fi
  ################################
  ################################
  T[1]=`date`
  mag=`grep "  1 F" result | awk '{print $10}'`
  b=`grep "aborting loop because EDIFF is reached" OUTCAR`
  static=`expr length "$b"`
    if ((${static} > 0));then
    echo ${T[*]}>converged.txt

      if (($lenth < 1))
      then
      echo "Magnetic Moment=" $mag "muB" >> converged.txt
      else
      echo "False Spin Polarization" >> converged.txt
      fi

    E=`grep E0 OSZICAR | awk '{print sprintf("%15.7f",$5)}'`
    sum=0;for line in $(sed -n "7,1p" POSCAR);do sum=`echo "$line + $sum" | bc -l`;done
    Eperatom=`echo "$E / $sum" | bc -l `
    echo "Energy_per_atom= " $Eperatom >>converged.txt
    fi


  # bader part
  chgsum.pl AECCAR0 AECCAR2    
  bader CHGCAR -ref CHGCAR_sum

  rm badered.txt
    for line in $(sed -n "7,1p" POSCAR)
    do
    echo $line >>line.txt
    done
  N=`wc -l line.txt | awk '{print $1}'`
  J=1;j=0
    for ((i=1;i<=$N;i++))
    do
    M=`echo "$i - 1" | bc -l`
    n=`sed -n "$i,1p" line.txt`
      if (($M > 0));then
      m=`sed -n "$M,1p" line.txt`
      else 
      m=0
      fi
    J=`echo "$J + $m" | bc -l`
    j=`echo "$j + $n" | bc -l`
    STA[$i]=$J
    END[$i]=$j
    done

    for ((i=1;i<=$N;i++))
    do
      for ((k=${STA[$i]};k<=${END[$i]};k++))
      do
      K=`echo "$k + 2" | bc -l`
      later[$K]=`sed -n "$K,1p" ACF.dat | awk '{print $5}'`
      grep -B 1 "parameters from PSCTR are:" POTCAR>POTCAR.txt
      B=`echo "1 + 3 * ($i - 1)" | bc -l`
      befor[$K]=`sed -n "$B,1p" POTCAR.txt`
      val[$K]=`echo "${befor[$K]} - ${later[$K]}" | bc -l`
      done
    val[1]="   val"
    val[2]=""
    done

    for ((k=1;k<=${END[$N]}+2;k++))
    do
    bader[$k]=`head -$k ACF.dat | tail -1`
    echo ${bader[$k]} ${val[$k]} >>badered.txt	
    done
  rm line.txt
  unset later;unset befor;unset STA;unset END;unset val; unset bader


  # projected DOS

  efermi=`grep E-fermi OUTCAR | awk '{print $3}'`
    for T in 200 400 600 800
    do

    echo $efermi > temp
    echo "-15" >> temp
    echo "0.005" >> temp
    echo "5001" >> temp
    echo $T >> temp
    echo "F"  >>temp
    echo "F">>temp
    echo "F">>temp
    echo "T">>temp
    dospar < temp
    rm -f temp
   
    mv tdos.txt download_tdos_${T}K.txt 
      for line in `sed -n "6,1p" POSCAR`
      do
      mv ${line}.txt download_${line}_${T}K.txt
      done 

      for line in `sed -n "6,1p" POSCAR`
      do
      mv ${line}_.txt download_${line}_${T}K.txt
      done

    echo $efermi > temp
    echo "-15" >> temp
    echo "0.05" >> temp
    echo "501" >> temp
    echo $T >> temp
    echo "F"  >>temp
    echo "F">>temp
    echo "F">>temp
    echo "T">>temp
    dospar < temp
    rm -f temp
   
    mv tdos.txt fig_tdos_${T}K.txt 
      for line in `sed -n "6,1p" POSCAR`
      do
      mv ${line}.txt fig_${line}_${T}K.txt
      done 

      for line in `sed -n "6,1p" POSCAR`
      do
      mv ${line}_.txt fig_${line}_${T}K.txt
      done

    done

  rm -rf WAVECAR CHG CHGCAR_sum AECCAR*
  #  rm -rf PROCAR

  #################Ferro part
  mkdir FerrEle
  cd FerrEle
  cp ../CONTCAR POSCAR
  phonopy --symmetry
  cp BPOSCAR POSCAR
  cp ../POTCAR .
    for ((i=1;i<=6;i++))
    do
    start[$i]=`lattice_parameters | awk -v j=$i '{print $j}'`
    done


  #KPOINTS 30/L
    for ((i=1;i<=3;i++))
    do
    mesh[$i]=`echo "30 / ${start[$i]} + 1.0" | bc -l | awk -F "." '{print $1}'`
    done
  echo "KPOINTS" >KPOINTS
  echo "0" >>KPOINTS
  echo "G">> KPOINTS
  echo ${mesh[*]} >> KPOINTS
  echo "0 0 0" >>KPOINTS

  cp ../../../INCAR.test_ferro.pbe INCAR
    if (($soc < 1));then
      if (($lenth < 1))
      then
      echo "ISPIN=2" >> INCAR
      fi
    else
    echo "GGA_COMPAT=.FALSE.">>INCAR
    echo "SAXIX=0 0 1" >> INCAR
    echo "ISPIN=2" >> INCAR
    echo "LNONCOLLINEAR=.True. " >>INCAR
    echo "LORBMOM = .TRUE." >> INCAR
    echo "LSORBIT = .TRUE." >> INCAR
    fi

  T[0]=`date`

  #####################################################
  #################modify to accomodate user's cluster system
    if (($soc < 1))
    then
    mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym > result
    else
    mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym.so > result
    fi
  ################################
  ################################
  T[1]=`date`
  echo ${T[*]}>ferrele.txt
  cd ../

  #######End Ferr
  cd ../
  fi
# change
phonopy --symmetry --tolerance 0.2
echo "finish static calculation" >>../status.txt

#### Band part####
b=`find SCF/ -name converged.txt`
static=`expr length "$b"`
  if ((${static} > 0)); then
  rm -rf Band/
  mkdir Band 
  cp SCF/PO?CAR Band/
  cp SCF/CHGCAR Band/

  nele=`grep NELEC Relax/OUTCAR | awk '{print $3}'`
    if (($soc < 1));then
      if (($lenth > 0))
      then
      cp ../INCAR.band.pbe Band/INCAR
      NBANDS=`echo "$nele * 1.5" | bc -l | awk -F "." '{print $1}'`
      echo "NBANDS=" $NBANDS >> Band/INCAR
      else
      cp ../INCAR.band.pbe Band/INCAR
      echo "ISPIN=2" >> Band/INCAR
      NBANDS=`echo "$nele * 1.5" | bc -l | awk -F "." '{print $1}'`
      echo "NBANDS=" $NBANDS >> Band/INCAR
      fi
    else
    cp ../INCAR.band.pbe Band/INCAR
    echo "GGA_COMPAT=.FALSE.">>INCAR
    echo "SAXIX=0 0 1" >> Band/INCAR
    echo "ISPIN=2" >> Band/INCAR
    echo "LNONCOLLINEAR=.True. " >>Band/INCAR
    echo "LORBMOM = .TRUE." >> Band/INCAR
    echo "LSORBIT = .TRUE." >> Band/INCAR
    NBANDS=`echo "$nele * 2.5" | bc -l | awk -F "." '{print $1}'`
    echo "NBANDS=" $NBANDS >> Band/INCAR
    fi

  cd Band/
  #############################
  ###########################modify to accomodate your kpath.py utilization
  GETBANDK.sh
  ###################################
  ##################################
  cp KPOINTS.band KPOINTS
  numk=`wc -l KPOINTS.band | awk '{print $1}'`
  temk=`echo "($numk - 4) / 3" | bc`
  echo "n">temp
  echo $temk >>temp
  GETINCAR
  T[0]=`date`

  #####################################################
  #################modify to accomodate user's cluster system
    if (($soc < 1))
    then
    mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym > result
    else
    mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym.so > result
    fi
  ################################
  ################################


  T[1]=`date`
  b=`grep "aborting loop because EDIFF is reached" OUTCAR`
  BAnd=`expr length "$b"`
  if ((${BAnd} > 0));then
    echo ${T[*]}>banded.txt
    bandstru < temp
    rm temp
  fi

  rm -rf WAVECAR CHG* TAUCAR 
  rm PROCAR
  cd ../
fi


#### trans part####
b=`find SCF/ -name converged.txt`
static=`expr length "$b"`
  if ((${static} > 0)); then
  rm -r Transport/
  mkdir Transport
  cp SCF/PO?CAR Transport/
  cp SCF/CHGCAR Transport/ 
  #get initial a,b,c,alpha,beta,gamma for KPOINTS
  cd Transport/
    for ((i=1;i<=6;i++))
    do
    start[$i]=`lattice_parameters | awk -v j=$i '{print $j}'`
    done
  cd ../

  #KPOINTS 240/L
    for ((i=1;i<=3;i++))
    do
      if (($soc < 1));then
      mesh[$i]=`echo "240 / ${start[$i]} + 1.0" | bc -l | awk -F "." '{print $1}'`
      else
      mesh[$i]=`echo "150 / ${start[$i]} + 1.0" | bc -l | awk -F "." '{print $1}'`
      fi
    done
  echo "KPOINTS" >KPOINTS
  echo "0" >>KPOINTS
  echo "G">> KPOINTS
  echo ${mesh[*]} >> KPOINTS
  echo "0 0 0" >>KPOINTS

  mv KPOINTS Transport/
  nele=`grep NELEC Relax/OUTCAR | awk '{print $3}'`

  # number of empty bands is half the valence bands
    if (($soc < 1));then
      if (($lenth > 0))
      then
      cp ../INCAR.trans.pbe Transport/INCAR
      NBANDS=`echo "$nele" | bc -l | awk -F "." '{print $1}'`
      echo "NBANDS=" $NBANDS >> Transport/INCAR
      else
      cp ../INCAR.trans.pbe Transport/INCAR
      echo "ISPIN=2" >> Transport/INCAR
      NBANDS=`echo "$nele" | bc -l | awk -F "." '{print $1}'`
      echo "NBANDS=" $NBANDS >> Transport/INCAR
      fi
    else
    cp ../INCAR.trans.pbe Transport/INCAR
    echo "GGA_COMPAT=.FALSE.">>INCAR
    echo "SAXIX=0 0 1" >> Transport/INCAR
    echo "ISPIN=2" >> Transport/INCAR
    echo "LNONCOLLINEAR=.True. " >>Transport/INCAR
    echo "LORBMOM = .TRUE." >> Transport/INCAR
    echo "LSORBIT = .TRUE." >> Transport/INCAR
    NBANDS=`echo "$nele * 1.5" | bc -l | awk -F "." '{print $1}'`
    echo "NBANDS=" $NBANDS >> Transport/INCAR
    fi

  cd Transport/
  GETINCAR
  T[0]=`date`
  ###################################
  #########################modify to accomodate user's cluster system
    if (($soc < 1))
    then
    mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym.lowmem > result
    else
    mpirun -bootstrap lsf  /share/home/jyang/bin/vasp.5.4.4.psym.so.lowmem > result
    fi
  ###################################
  ###################################

  T[1]=`date`
  b=`grep "aborting loop because EDIFF is reached" OUTCAR`
  trans=`expr length "$b"`
    if ((${trans} > 0));then
    echo ${T[*]}>transported.txt
    
    getfulleig

    else
    echo ${T[*]}>nontransported.txt
    fi
  rm -rf WAVECAR CHG* TAUCAR PROCAR 


  derivation
  echo "T
  T T T
  F" > control.in
  getgap
  gap=`cat gap.txt | tail -1 | awk '{print $4}'`
    if ((`echo "$gap > 0.1" | bc`));then
    Nel=`grep NELE OUTCAR | awk '{print $3}'`
    CBB=`grep CBM gap.txt | awk '{print $13}'`   ###############added by xinli,20170606
    Efer=`grep E-fermi OUTCAR | awk '{print $3}'`
    vol=`grep vol OUTCAR | tail -1 | awk '{print $5}'`
    carr[1]=0.01;carr[2]=100;carr[3]=-100;carr[4]=-0.01  ######the carrier concentration is between E18~E22
      for ((i=1;i<=4;i++))
      do
      netotal[$i]=`echo "$vol * ${carr[$i]} * 0.0001 + $Nel" | bc -l`   #######total electronic state of different carrier concentration
      echo "T" >temp
        if (($lenth > 0))
        then
        echo "  "$CBB"  " >> temp
        echo "-0.5" >> temp
        else
        echo "  "$CBB"  "$CBB >> temp
        echo "-0.5  -0.5" >>temp
        fi
      echo ${netotal[$i]}>>temp
      echo "700" >>temp
      Ecarr[$i]=`efdetermin < temp | tail -1 | awk '{print $2}'`   #######Energy of different carrier concentration
      dECARR[$i]=`echo "(${Ecarr[$i]}) - ($Efer)" | bc -l`  ##### Ecarr-Efermi
      done
    NE=`perl -e "print (((${Ecarr[2]}) - (${Ecarr[1]})) / 0.001 + 1)" | awk -F "." '{print $1}'`
    figne=`perl -e "print (((${Ecarr[2]}) - (${Ecarr[1]})) / 0.01 + 1)" | awk -F "." '{print $1}'`

      if (($lenth > 0))
      then
      echo $Efer ${dECARR[1]} 0.001 $NE 700 $CBB -0.5 $Nel >finale.input  ##############changed by xinli,20170606
      else
      echo $Efer ${dECARR[1]} 0.001 $NE 700 $CBB $CBB -0.5 -0.5 $Nel >finale.input  ##############changed by xinli,20170606
      fi
    echo "3" "100" "0.5" >>finale.input
    OMP_NUM_THREADS=`grep processor /proc/cpuinfo | wc -l`
    ##############################modify by different transoptic
    transoptic_e_omp
    mv RTA-trace-e.txt download_RTA-trace-e_ntype.txt
      if (($lenth > 0))
      then
      echo $Efer ${dECARR[1]} 0.01 $figne 700 $CBB -0.5 $Nel >finale.input  ##############changed by xinli,20170606
      else
      echo $Efer ${dECARR[1]} 0.01 $figne 700 $CBB $CBB -0.5 -0.5 $Nel >finale.input  ##############changed by xinli,20170606
      fi
    echo "3" "100" "0.5" >>finale.input
    ##############################modify by different transoptic
    transoptic_e
    mv RTA-trace-e.txt fig_RTA-trace-e_ntype.txt
    NE=`perl -e "print (((${Ecarr[4]}) - (${Ecarr[3]})) / 0.001 + 1)" | awk -F "." '{print $1}'`
    figne=`perl -e "print (((${Ecarr[4]}) - (${Ecarr[3]})) / 0.01 + 1)" | awk -F "." '{print $1}'`
      if (($lenth > 0))
      then
      echo $Efer ${dECARR[3]} 0.001 $NE 700 $CBB -0.5 $Nel >finale.input  ################changed by xinli,20160606
      else
      echo $Efer ${dECARR[3]} 0.001 $NE 700 $CBB $CBB -0.5 -0.5 $Nel >finale.input  ##############changed by xinli,20170606
      fi
    echo "3" "100" "0.5" >>finale.input
    ##############################modify by different transoptic
    transoptic_e
    mv RTA-trace-e.txt download_RTA-trace-e_ptype.txt
      if (($lenth > 0))
      then
      echo $Efer ${dECARR[3]} 0.01 $figne 700 $CBB -0.5 $Nel >finale.input  ##############changed by xinli,20170606
      else
      echo $Efer ${dECARR[3]} 0.01 $figne 700 $CBB $CBB -0.5 -0.5 $Nel >finale.input  ##############changed by xinli,20170606
      fi
    echo "3" "100" "0.5" >>finale.input
    ##############################modify by different transoptic
    transoptic_e
    mv RTA-trace-e.txt fig_RTA-trace-e_ptype.txt

    fi

  cd ../

fi


cd ../  ####system
